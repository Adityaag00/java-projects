import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmTrnRec extends javax.swing.JFrame {

    /** Creates new form frmTrnRec */
    public frmTrnRec() {
        initComponents();
        txtRecNo.requestFocus();
        Color col=getContentPane().getBackground();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAllRec = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOneRec = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtRecNo = new javax.swing.JTextField();
        btnShow = new javax.swing.JButton();
        btnAddRow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Transfer Records");
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("All Records Table");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("One Record Table");

        tblAllRec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Age", "Class", "Grade"
            }
        ));
        jScrollPane1.setViewportView(tblAllRec);

        tblOneRec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOneRec);

        jLabel3.setText("Enter Record Number you want to view : ");

        txtRecNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRecNoKeyTyped(evt);
            }
        });

        btnShow.setText("Show Record");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        btnAddRow.setText("Add Row");
        btnAddRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 250, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAddRow)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtRecNo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, 0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddRow)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRecNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShow))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(673, 258));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        int i=0,recNo;
        String []headName=new String[tblAllRec.getColumnCount()];
        Object []value=new Object[tblAllRec.getColumnCount()];

        recNo=Integer.parseInt(txtRecNo.getText());

        if(recNo<=0 || recNo>tblAllRec.getRowCount())
        {
            JOptionPane.showMessageDialog(this,"There are "+tblAllRec.getRowCount()+" rows in Table","Error",JOptionPane.ERROR_MESSAGE);
            txtRecNo.selectAll();
            txtRecNo.requestFocus();
        }
        else
        {
            recNo--;//row
            i=0;//column
            if(checkValue(recNo))
            {
                //retrieve heading name and said values from AllRecTable in respective arrays
                while(i<tblAllRec.getColumnCount())
                {
                    headName[i]=tblAllRec.getColumnName(i);
                    value[i]=tblAllRec.getValueAt(recNo,i);
                    i++;
                }

                //After reading a row from AllRowTable delete it and add a Blank row
                i=0;
                DefaultTableModel arTm=(DefaultTableModel)tblAllRec.getModel();
                arTm.removeRow(recNo);
                Object []blankRow={"","","",""};
                arTm.addRow(blankRow);

                //To remove the previous rows from OneRowTable
                DefaultTableModel orTm=(DefaultTableModel)tblOneRec.getModel();
                int row=orTm.getRowCount();
                if(row>0)
                {
                    for(i=0;i<row;i++)
                        orTm.removeRow(0);
                }

                //To add records in One Row Table
                i=0;
                while(i<value.length)
                {
                    Object []newRow={headName[i],value[i]};
                    orTm=(DefaultTableModel)tblOneRec.getModel();
                    orTm.addRow(newRow);
                    i++;
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Empty Record...","Error",JOptionPane.ERROR_MESSAGE);
                txtRecNo.selectAll();
                txtRecNo.requestFocus();
            }
        }
    }//GEN-LAST:event_btnShowActionPerformed

    private void txtRecNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecNoKeyTyped
        if(!(evt.getKeyChar()>=KeyEvent.VK_0 && evt.getKeyChar()<=KeyEvent.VK_9))
            evt.consume();
    }//GEN-LAST:event_txtRecNoKeyTyped

    private void btnAddRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRowActionPerformed
        DefaultTableModel dtm=(DefaultTableModel)tblAllRec.getModel();
        dtm.addRow(new Object[]{"","","",""});
    }//GEN-LAST:event_btnAddRowActionPerformed

    boolean checkValue(int rec)
    {
        int i=0,tmp=0;
        for(i=0;i<tblAllRec.getColumnCount();i++)
        {
            if(tblAllRec.getValueAt(rec,i)==null)
                tmp++;
        }

        if(tmp==4)
            return false;
        else
            return true;
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTrnRec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRow;
    private javax.swing.JButton btnShow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAllRec;
    private javax.swing.JTable tblOneRec;
    private javax.swing.JTextField txtRecNo;
    // End of variables declaration//GEN-END:variables

}
