import java.io.BufferedReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.StringTokenizer;
import java.io.InputStreamReader;

public class WatchingCPL {

   public static void main(String[] args) throws IOException {
      FastScanner sc = new FastScanner();
      int t = sc.nextInt();

      while (t-- > 0) {
         int n = sc.nextInt();
         int k = sc.nextInt();
         int h[] = Arrays.stream(sc.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
         Arrays.sort(h);
         int suffix[] = new int[n];
         int dp[][] = new int[n][k];

         for (int i = 0; i < n; i++) {
            for (int j = 0; j < k; j++) {
               dp[i][j] = Integer.MAX_VALUE;
            }
         }
         dp[n][0] = 0;
      }
   }

   static class FastScanner {
      BufferedReader br;
      StringTokenizer st;

      public FastScanner() {
         br = new BufferedReader(new InputStreamReader(System.in));
      }

      String next() {
         while (st == null || !st.hasMoreElements()) {
            try {
               st = new StringTokenizer(br.readLine());
            } catch (IOException e) {
               e.printStackTrace();
            }
         }
         return st.nextToken();
      }

      int nextInt() {
         return Integer.parseInt(next());
      }

      long nextLong() {
         return Long.parseLong(next());
      }

      String nextLine() throws IOException {
         String st = br.readLine();
         return st;
      }
   }
}
